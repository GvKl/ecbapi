"2015-11-09 Test Query.RData")
)
require(data.table)
require(rlist)
require(dplyr)
require(pipeR)
require(devtools)
require(ecbapi)
require(bit64)
require(tis)
series[[1L]]
series[[1L]] %>>% as.data.frame
help(package = "tis")
series[[1L]] %>>% ti
series[[1L]] %>>% tis
series[[1L]] %>>% tif
series[[1L]] %>>% as.numeric
series[[1L]] %>>% ti %>>% length
series[[1L]] %>>% as.numeric %>>% lenght
series[[1L]] %>>% as.numeric %>>% length
series
series[[1L]]
data.table(
series = series %>>% names %>>% (.[1L]),
date = series[[1L]] %>>% ti,
value = series[[1L]] %>>% as.numeric
)
data.table(
series = series %>>% names %>>% (.[1L]),
date = series[[1L]] %>>% ti %>>% as.Date,
value = series[[1L]] %>>% as.numeric
)
series %>>%
list.map({
data.table(
series = .name,
date = . %>>% ti %>>% as.Date,
value = . %>>% as.numeric
)
}) %>>%>
rbindlist(fill = TRUE) ->
data
series %>>%
list.map({
data.table(
series = .name,
date = . %>>% ti %>>% as.Date,
value = . %>>% as.numeric
)
}) %>>%
rbindlist(fill = TRUE) ->
data
data
data[,tstrsplit(series,split = "\\.")]
list(
data[,tstrsplit(series,split = "\\.")],
data
) %>>%
cbind
cbind(
data[,tstrsplit(series,split = "\\.")],
data
) ->
data_v2
View(data_v2)
cbind(
data[,tstrsplit(series,split = "\\.")],
data
) ->
data_v2
data_v2
data_v2 %>>%
select(
iso3 = v3,
concept = v8,
date,
value
) %>>%
mutate(
code = sprintf("%s_%s",code,iso3)
) %>>%
dcast.data.table(
date ~ code,
value.var = 'value'
) ->
data_wide
data_v2
data_v2 %>>%
select(
iso3 = V3,
concept = V8,
date,
value
) %>>%
mutate(
code = sprintf("%s_%s",code,iso3)
) %>>%
dcast.data.table(
date ~ code,
value.var = 'value'
) ->
data_wide
data_v2 %>>%
select(
iso3 = V3,
concept = V8,
date,
value
) %>>%
mutate(
code = sprintf("%s_%s",concept,iso3)
) %>>%
dcast.data.table(
date ~ code,
value.var = 'value'
) ->
data_wide
View(data_wide)
data_v2 %>>%
select(
iso3 = V3,
concept = V8,
date,
value
) %>>%
mutate(
code = sprintf("%s_%s",concept,iso3) %>>% toupper
) %>>%
dcast.data.table(
date ~ code,
value.var = 'value'
) ->
data_wide
data_wide
data_wide %>>%
write.csv(
row.names = FALSE,
file = sprintf("%s/%s %s.csv",
DIR.LOCAL,
Sys.Date(),
"To import in Eviews")
)
install.packages(rJava)
install.packages("rJava""")
install.packages("rJava")
require(rJava)
x <- c("zutn","isrv")
data_vb2
data_v2
tstrsplit
'dt'
dt_v2 <- series_ref
dt_v2
dt_v2 %>>% str
strsplit(dt_v2[['name']],split = "\\.") %>>% (.[1:10])
strsplit(as.character(dt_v2[['name']]),split = "\\.") %>>% (.[1:10])
tstrsplit
lapply(strsplit(as.character(dt_v2[['name']]),split = "\\."), function(x) x[[8L]])
sapply(strsplit(as.character(dt_v2[['name']]),split = "\\."), function(x) x[[8L]])
dt_v2[['code']] <-
sapply(strsplit(as.character(dt_v2[['name']]),split = "\\."), function(x) x[[8L]])
subset(
dt_v2,
code %in% x
)
subset(
dt_v2,
code %in% x
)[['name']]
subset(
dt_v2,
code %in% x
)[['name']] ->
code_sel
subset(
dt_v2,
code %in% x
)[['name']] ->
codes_sel
getfame(sernames = codes_sel,
db = db,
start = NULL,
end = NULL) ->
out
DIR.LOCAL <- "//gimecb01/data/ECB business areas/DGE/DED/Monitoring and Analysis/09. Fiscal Policies (FIP)/Analytical Projects/2015 Cizel_CCW_OB_SovereignRisk/DSA Data Pipeline"
list.files(DIR.LOCAL)
load(
file = sprintf("%s/%s",
DIR.LOCAL,
"2015-11-09 Test Query.RData")
) # returns series_ref, series, codes_sel
series %>>%
list.map({
data.table(
series = .name,
date = . %>>% ti %>>% as.Date,
value = . %>>% as.numeric
)
}) %>>%
rbindlist(fill = TRUE) ->
data
cbind(
data[,tstrsplit(series,split = "\\.")],
data
) ->
data_v2
data_v2 %>>%
select(
iso3 = V3,
concept = V8,
date,
value
) %>>%
mutate(
code = sprintf("%s_%s",concept,iso3) %>>% toupper
) %>>%
dcast.data.table(
date ~ code,
value.var = 'value'
) ->
data_wide
data_wide %>>%
write.csv(
row.names = FALSE,
file = sprintf("%s/%s %s.csv",
DIR.LOCAL,
Sys.Date(),
"To import in Eviews")
)
.jinit()
Sys.Date(),
fameConnection(
service = "2969",
host = "stat-prod.ecb.de"
) ->
conn
require(fame)
require(data.table)
require(rlist)
require(dplyr)
require(pipeR)
require(devtools)
DIR.PACKAGES <- "//gimecb01/data/ECB business areas/DGE/DED/Monitoring and Analysis/09. Fiscal Policies (FIP)/Analytical Projects/2015 Cizel_CCW_OB_SovereignRisk/DSA Data Pipeline/Packages by JCizel/ecbapi"
setwd(DIR.PACKAGES)
fameConnection(
service = "2969",
host = "stat-prod.ecb.de"
) ->
conn
fameWildlist(
wildString = "?",
db = "/global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = conn,
nMax = 1E+6
) ->
o
o
str(o)
fameConnection(
service = "2963",
host = "stat-prod.ecb.de"
) ->
conn
fameWildlist(
wildString = "?",
db = "/global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = conn,
nMax = 1E+3
) ->
o
o
fameConnection(
service = "2969",
host = "stat-prod.ecb.de"
) ->
conn
fameWildlist(
wildString = "?",
db = "/global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = conn,
nMax = 1E+3
) ->
o
.init()
require(rJava)
.jinit()
fameWildlist(
wildString = "?",
db = "stat-prod.ecb.de /global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = conn,
nMax = 1E+3
) ->
o
o
fameWildlist(
wildString = "?",
db = "stat-prod.ecb.de /global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = conn,
nMax = 10
) ->
o
o
fameWildlist(
wildString = "?",
db = "2963@stat-prod.ecb.de /global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = conn,
nMax = 10
) ->
o
o
fameWildlist(
wildString = "?",
db = "2963@stat-prod.ecb.de /global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = NULL,
nMax = 10
) ->
o
o
fameWildlist(
wildString = "?",
db = "#2963@stat-prod.ecb.de /global/disdatadg/esdb/unrestricted/other/ameco.db",
connection = NULL,
nMax = 10
) ->
o
fameWildlist(
wildString = "?",
db = "#2963@stat-prod.ecb.de /global/disdatadg/esdb/unrestricted/other/ameco.db",
nMax = 10
) ->
o
o
series[[1L]]
str(series)
l <- list()
for (x in names(series)){
data.table(
series = .name,
date = . %>>% ti %>>% as.Date,
value = . %>>% as.numeric
) ->
l[[x]]
}
l <- list()
for (x in names(series)){
data.table(
series = x,
date = series[[x]] %>>% ti %>>% as.Date,
value = series[[x]] %>>% as.numeric
) ->
l[[x]]
}
Reduce("rbind",l) ->
data
series
strsplit(as.character(data$series),split = "\\.")
t(strsplit(as.character(data$series),split = "\\."))
lapply(strsplit(as.character(data$series),split = "\\."),function(l) data.frame(l))
lapply(strsplit(as.character(data$series),split = "\\."),function(l) data.frame(t(l)))
Reduce('rbind',lapply(strsplit(as.character(data$series),split = "\\."),function(l) data.frame(t(l))))
cbind(
Reduce('rbind',lapply(strsplit(as.character(data$series),split = "\\."),function(l) data.frame(t(l)))),
data
) ->
data_v2
data_v2[['iso3']] <- data_v2[['V3']]
data_v2[['concept']] <- data_v2[['V8']]
dcast(data = data_v2, date ~ code, value.var = 'value')
dcast
dcast.data.frame
require(dplyr)
require(reshape2)
install.packages('reshape2')
require(reshape2)
dcast
cast
)
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
Indometh
reshape(data = data_v2,
idvar = "date".
timevar = "code",
v.names = "value")
reshape(data = data_v2,
idvar = "date",
timevar = "code",
v.names = "value")
reshape(data = data_v2,
idvar = "date",
timevar = "code",
v.names = "value",
direction = "wide")
data_v2
names(data_v2)
data_v2[['iso3']] <- data_v2[['X3']]
data_v2[['concept']] <- data_v2[['X8']]
data_v2[['code']] <- sprintf("%s_%s",data_v2[['concept']],data_v2[['iso3']])
reshape(data = data_v2,
idvar = "date",
timevar = "code",
v.names = "value",
direction = "wide")
reshape(data = data_v2[,c('date','code','value')],
idvar = "date",
timevar = "code",
v.names = "value",
direction = "wide")
FILENAME = "To import in Eviews"
names(data_wide) <- gsub(pattern = "value\\.",replacement = "", names(data_wide))
data_wide
data_wide
require(tis)
data_wide[[1L]]
t <- tis(data_wide[[2L]])
t <- tis(data_wide[[2L]],
start = min(data_wide[[1L]]))
t <- tis(data_wide[[2L]],
start = min(data_wide[[1L]]),
tif = 'yearly')
t <- tis(data_wide[[2L]],
start = min(data_wide[[1L]]),
tif = 'annual')
t
data_wide[,-1]
data_wide = data.frame(data_wide)
data_wide[,-1]
l = list()
for (x in names(data_wide)[-1]){
l[[x]] <-
tis(data_wide[[2L]],
start = ,
tif = 'annual')
}
for (x in names(data_wide)[-1]){
l[[x]] <-
tis(data_wide[[2L]],
start = date_min,
tif = 'annual')
}
date_min <- min(data_wide[[1L]])
l = list()
for (x in names(data_wide)[-1]){
l[[x]] <-
tis(data_wide[[2L]],
start = date_min,
tif = 'annual')
}
l
file = sprintf("%s/%s %s.csv",
DIR.DERIVED,
Sys.Date(),
FILENAME)
DIR.DERIVED <- "/dissuser/ec_fpo/cizelja/Data/"
file = sprintf("%s/%s %s.csv",
DIR.DERIVED,
Sys.Date(),
FILENAME)
file
date_min <- min(data_wide[[1L]])
db = sprintf("%s/%s",DIR.DERIVED,'TestFAME_Test2.db')
system(sprintf("rm %s",db))
require(fame)
require(rJava)
.jinit()
dir( "C:/Apps/FAME/TimeIQ/lib", full.names=TRUE )
.jaddClassPath(dir( "C:/Apps/FAME/TimeIQ/lib", full.names=TRUE ))
.jclassPath()
.jnew('com/fame/timeiq/persistence/Server') -> server
.jcall('com/fame/timeiq/persistence/Server', method = 'getInstance') ->
tiqServer
.jcall(server, method = 'getInstance') ->
tiqServer
.jcall('com/fame/timeiq/persistence/Server','S', method = 'getInstance')
help(J)
J('com.fame.timeiq.persistence.Server')
J('com.fame.timeiq.persistence.Server') %>>% str
J('com.fame.timeiq.persistence.Server')$getInstance()
J('com.fame.timeiq.persistence.Server')$getInstance() ->
tiqServer
tiqServer
tiqSession = tiqServer$getSession();
install()
require(ecbapi)
install()
document()
document()
install()
require(ecbapi)
url = "https://sdw-wsrest.ecb.europa.eu/service/datastructure/ESTAT/NA_SEC"
    doc = read_xml(url)
    ns = doc %>>% xml_ns
nsl
ns 
    lookup <- doc %>>% xml_find_all(".//str:DataStructures/str:DataStructure/str:DataStructureComponents/str:DimensionList/str:Dimension", 
        ns = ns) %>>% list.map({
        part1 <- . %>>% xml_attrs %>>% as.list %>>% as.data.table %>>% 
            rename(varcode = id)
        part2 <- . %>>% xml_find_all(".//str:Enumeration/Ref", 
            ns = ns) %>>% xml_attrs %>>% (.[[1L]]) %>>% as.list %>>% 
            as.data.table %>>% rename(codelist = id)
        cbind(part1, part2)
    }) %>>% rbindlist(fill = TRUE) %>>% select(varcode, codelist, 
        version, agencyID, class)
    codelists <- lookup %>>% get_codelists
    lookup[["codelist_name"]] <- codelists %>>% list.map(attr(., 
        "name")) %>>% unlist %>>% as.character
codelists
traceback()
q()
n
