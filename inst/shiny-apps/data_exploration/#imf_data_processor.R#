library(data.table)
library(rlist)
library(pipeR)
library(xlsx)
library(lubridate)
library(stringr)


imf_data_processor <- function(
    PATH.DIR = NULL,
    date.min = '1980-01-01' %>>% as.Date,
    date.max = '2016-01-01' %>>% as.Date,
    frequency = 'Q',
    outfile = 'data'
){

    ## -------------------------------------------------------------------------- ##
    ## Prepare list of variable                                                   ##
    ## -------------------------------------------------------------------------- ##
    dt <- fread(input = sprintf('%s/%s', PATH.DIR, 'Data.csv'))

    dt[,{
        .SD[["Time Code"]] %>>%    
        str_split("Q") %>>%
        list.map(.[1L]) %>>%
        unlist %>>% as.numeric ->
            years

        .SD[["Country Code"]] %>>%
        unique %>>%
        length ->
            nctry

        list(
            min.year = years %>>% min,
            max.year = years %>>% max,
            nctry = nctry
        )    
    }, by = c('Concept Label','Concept Code','Frequency Label','Frequency Code')] ->
        dt_vars

    dt_vars %>>%
    write.csv(file = sprintf("%s/%s",PATH.DIR,'variables.csv'))


    ## -------------------------------------------------------------------------- ##
    ## Create a dataset for analysis                                              ##
    ## -------------------------------------------------------------------------- ##
    dt %>>%
    (dt ~ dt[,c('date','value') := {
        value = Value %>>% as.numeric
        
        `Time Code` %>>%
        unique %>>%
        (~dates_orig) %>>%
        str_split("Q") %>>%
        list.map({
            x <- .
            
            if (!is.na(.[2L]))
                sprintf('%s-%s-%s',x[1L],(x[2L] %>>% as.numeric) *3,1) 
            else
                sprintf('%s-%s-%s',x[1L],12,1)
        }) %>>%
        unlist %>>% as.Date %>>%
        (x ~ x + months(1) - days(1)) ->
            dates_new

        dates = data.table(dates_orig,dates_new, key = 'dates_orig')

        date = dates[`Time Code`]
        

        list(
            date = date$dates_new,
            value = value
        ) 
    }]) ->
        dt

    concept <- dt[['Concept Code']] %>>%
    unique

    ids <- dt[['Country Label']] %>>%
    unique

    dates <- seq(
        from = date.min,
        to = date.max,
        by = '3 month'        
    )-1                                

    CJ(concept = concept, ID = ids, date = dates, frequency = frequency) %>>%
    setkey(concept, ID, frequency, date) %>>% unique ->
        tmpl

    dt_sel <- dt %>>%
    (dt ~ dt[, .SD, .SDcols = c('Concept Code', 'Country Label', 'Frequency Code', 'date', 'value')])

    setkeyv(dt_sel, c('Concept Code', 'Country Label', 'Frequency Code', 'date'))

    (dt_sel %>>% unique)[tmpl, roll = TRUE][!is.na(value)] %>>%
    setnames(
        old = c('Concept Code', 'Country Label', 'Frequency Code'),
        new = c('concept','country','freq')
    ) ->
        data

    data %>>%
    setkey(
        concept, country, date
    ) %>>%
    dcast.data.table(
        country + date ~ concept,
        value.var = 'value'
    ) %>>%
    (? summary(.)) ->
        data_wide


    data_file_name = sprintf('%s',outfile)
    lookup_file_name = sprintf('%s_lookup',outfile)
    
    assign(data_file_name, data_wide)
    assign(lookup_file_name, dt_vars)
    
    save(list = c(data_file_name, lookup_file_name),
         file = sprintf('%s/%s.RData',PATH.DIR,outfile))    
}

imf_data_processor(PATH.DIR = '~/Data/DNB-BIS/IMF-BOP_3-4-2015/IIP/',outfile = 'bopiip',frequency = 'A')f
imf_data_processor(PATH.DIR = '~/Data/DNB-BIS/IMF-IFS_2-4-2015/', outfile = 'imfifs')
